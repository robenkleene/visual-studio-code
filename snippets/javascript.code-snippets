{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Log variable": {
    "scope": "javascript,typescript",
    "prefix": "logv",
    "body": ["console.log(\"${1:result} = \" + $1);"],
    "description": "Log variable"
  },
  "template": {
    "prefix": "template",
    "body": "#!/usr/bin/env node\n\n$0",
    "description": "Template"
  },
  "debugv": {
    "prefix": "debugv",
    "body": "debug(\"${1:document} \" + $1);",
    "description": "Debug variable"
  },
  "Visual Studio Code command function": {
    "scope": "javascript,typescript",
    "prefix": "vscommand",
    "body": [
      "let ${1: commandName}Disposable = vscode.commands.registerCommand(",
      "  \"extension.$1\",",
      "  async (uri: vscode.Uri) => {",
      "  }",
      ");",
      "context.subscriptions.push($1Disposable);"
    ],
    "description": "Visual Studio Code command function"
  }
}
